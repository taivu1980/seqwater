<?php

/**
 * Implementation of hook_menu().
 */
function webform_multifile_menu() {
  $items[] = array();

  $items['node/%webform_menu/submission/%webform_menu_submission/multifile_delete/%/%'] = array(
    'title' => 'Delete multifile upload',
    'load arguments' => array(1),
    'page callback' => 'webform_multifile_delete',
    'page arguments' => array(1, 3, 5, 6),
    'access callback' => 'webform_submission_access',
    'access arguments' => array(1, 3, 'edit'),
    'type' => MENU_CALLBACK,
  );

  $items['webform_multifile_convert_data'] = array(
    'title' => 'Convert old multifile field data',
    'page callback' => 'webform_multifile_convert_62_data',
    'access arguments' => array('edit all webform submissions'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of hook_webform_component_info().
 */
function webform_multifile_webform_component_info() {
  $components = array();

  $components['multifile'] = array(
    'label' => t('Multifile'),
    'description' => t('Multifile Support For Webform File Uploads.'),
    'features' => array(
      'conditional' => FALSE,
      'attachment' => TRUE,
    ),
    'file' => 'multifile.inc',
  );

  return $components;
}

/**
 * Menu callback to delete a single file from a multifile upload.
 */
function webform_multifile_delete($webform, $submission, $component_id, $fid) {
  if ($file = file_load($fid)) {
    file_delete($file);
    // Update the submission data and re-save it without the deleted fid.
    $fids = unserialize($submission->data[$component_id]['value'][0]);
    $key = array_search($fid, $fids);
    unset($fids[$key]);
    $submission->data[$component_id]['value'][0] = serialize($fids);
    module_load_include('inc', 'webform', 'includes/webform.submissions');
    webform_submission_update($webform, $submission);
  }
  drupal_goto('node/' . $webform->nid . '/submission/' . $submission->sid . '/edit');
}

/**
 * Implements hook_file_download().
 */
function webform_multifile_file_download($uri) {
  global $user;
  // Determine whether this file was a webform upload. If it was, retrieve file
  // information, plus the user id of the uploader.
  $target_document = db_select('file_managed', 'fm')->fields('fm')->condition('uri', $uri)->execute()->fetchObject();
  $q = db_select('webform_submitted_data', 'wsd');
  $q->join('webform_component', 'wc', 'wsd.cid = wc.cid');
  $multifile_scan = $q->fields('wsd')->condition('wc.type', 'multifile', '=')->execute();
  $submission_id = $submission_uid = NULL;
  while($multifile_row = $multifile_scan->fetchAssoc()) {
  	$file_ids = unserialize($multifile_row['data']);
  	if (in_array($target_document->fid, $file_ids) ) {
  		$submission_id = $multifile_row['sid'];
  	}
  }
  if ($submission_id) {
    $submission_uid = db_select('webform_submissions', 'ws')->fields('ws', array('uid'))->condition('sid', $submission_id, '=')->execute()->fetchObject();
  }

  if ($target_document && $submission_uid) {
    // Allow file access for admins, or for users who are viewing their own
    // submissions.
    if (user_access('access all webform results') || ($user->uid == $submission_uid->uid && user_access('access own webform results'))) {
      return file_get_content_headers($target_document);
    }
    // This is a webform-controlled file, but the user doesn't have access.
    return -1;
  }
  // This is not a webform-controlled file.
  return NULL;
}

/**
 * Convert all old webform multifile data from the 6.2 multifile component in
 * comment #1 on http://drupal.org/node/623692 to a 6.3 API component.
 *
 * This function WILL modify your data and there's no going back, so please
 * ensure you have a db backup prior to running it.
 */
function webform_multifile_convert_62_data() {
  $result = db_select('webform_component', 'wc')->fields('wc')->condition('type', 'multifile')->execute();
  $count = 0;
  while ($component = $result->fetchObject()) {
    $result2 = db_select('webform_submitted_data', 'wsd')->fields('wsd')->condition('cid', $component->cid)->execute();
    while ($submission = $result2->fetchObject()) {
      $data = unserialize($submission->data);
      // The old multifile used an object to store the data.
      if (is_object($data[0])) {
        $count++;
        $fids = array();
        foreach ($data as $file) {
          $fids[] = $file->fid;
        }
        $data = serialize($fids);
        db_update('webform_submitted_data')->fields(array('data' => $data))->condition('nid', $submission->nid)->condition('sid', $submission->sid)->condition('cid', $submission->cid)->execute();
      }
    }
  }

  return "Converted $count submissions";
}
